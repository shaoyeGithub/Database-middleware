#host=39.106.194.89

######################
#    spring
######################
#spring.cache.type=REDIS
spring.main.allow-bean-definition-overriding=true
server.port=8888

######################
#    redis
######################
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456
spring.redis.database=0

######################
#    mongdb
######################

spring.data.mongodb.uri=mongodb://localhost/test
# 验证登录信息的库
spring.data.mongodb.authentication-database=admin
# 要连接的库
spring.data.mongodb.database=test
# 连接地址和认证信息
spring.data.mongodb.host=localhost
spring.data.mongodb.port=24017
#spring.data.mongodb.username=root
#spring.data.mongodb.password=123


######################
#    druid
######################

#初始化时建立物理连接的个数。
spring.datasource.druid.initial-size=5
#最大连接池数量
spring.datasource.druid.max-active=20
#最小连接池数量
spring.datasource.druid.min-idle=5
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=3000
#是否缓存preparedStatement，也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-open-prepared-statements= -1
#配置检测可以关闭的空闲连接间隔时间
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置连接在池中的最小生存时间
spring.datasource.druid.min-evictable-idle-time-millis= 300000
spring.datasource.druid.max-evictable-idle-time-millis= 400000

#监控统计的stat,以及防sql注入的wall
spring.datasource.druid.filters= stat,wall
#Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
spring.datasource.druid.aop-patterns= com.web.springbootdruid.service.*

#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled= true
#添加过滤规则
spring.datasource.druid.web-stat-filter.url-pattern=/*
#忽略过滤的格式
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*

#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled= true
#访问路径为/druid时，跳转到StatViewServlet
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否能够重置数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
# 需要账号密码才能访问控制台，默认为root
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
#IP白名单
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
#&emsp;IP黑名单（共同存在时，deny优先于allow）
spring.datasource.druid.stat-view-servlet.deny=


######################
#    shading
######################
# 数据源
spring.shardingsphere.datasource.names=db0,db1,db2,db3
#spring.shardingsphere.datasource.names=db0

spring.shardingsphere.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db0.url=jdbc:mysql://localhost:3306/cbs0?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.shardingsphere.datasource.db0.username=root
spring.shardingsphere.datasource.db0.password=root

spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.url=jdbc:mysql://localhost:3306/cbs1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=root

spring.shardingsphere.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db2.url=jdbc:mysql://localhost:3306/cbs2?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.shardingsphere.datasource.db2.username=root
spring.shardingsphere.datasource.db2.password=root

spring.shardingsphere.datasource.db3.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db3.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db3.url=jdbc:mysql://localhost:3306/cbs3?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.shardingsphere.datasource.db3.username=root
spring.shardingsphere.datasource.db3.password=root

#配置默认数据库
spring.shardingsphere.sharding.default-data-source-name=db0
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=cbs$->{id % 2}

#分库策略 根据号段进行分库
spring.shardingsphere.sharding.tables.phone_number.database-strategy.inline.sharding-column=seg_id
spring.shardingsphere.sharding.tables.phone_number.database-strategy.inline.algorithm-expression=db$->{seg_id}

spring.shardingsphere.sharding.tables.phone_number.actual-data-nodes=db$->{1..3}.phone_number_$->{0..9}
spring.shardingsphere.sharding.tables.phone_number.table-strategy.inline.sharding-column=phone_number
spring.shardingsphere.sharding.tables.phone_number.table-strategy.inline.algorithm-expression=phone_number_$->{phone_number % 10}

spring.shardingsphere.sharding.tables.phone_number.key-generator.column=phone_id
spring.shardingsphere.sharding.tables.phone_number.key-generator.type=SNOWFLAKE

#配置数据节点
#其中user_info 为逻辑表名 实际为db0 数据库的user_info 中
spring.shardingsphere.sharding.tables.user_info.actual-data-nodes=db0.user_info_$->{1..3}

#user_info表的主键生成策略为 SNOWFLAKE
spring.shardingsphere.sharding.tables.user_info.key-generator.column=user_id
spring.shardingsphere.sharding.tables.user_info.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.user_info.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.user_info.table-strategy.inline.algorithm-expression=user_info_$->{user_id % 3 + 1}

spring.shardingsphere.props.sql.show=true

#配置公共表
#spring.shardingsphere.sharding.broadcast-tables=phone_seg